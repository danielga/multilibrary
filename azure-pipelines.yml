variables:
  DEPENDENCIES: $(System.DefaultWorkingDirectory)/thirdparty
  REPOSITORY_DIR: $(System.DefaultWorkingDirectory)
trigger:
  batch: true
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'
  paths:
    include:
    - azure-pipelines.yml
    - premake5.lua
    - premake
    - include
    - source
jobs:
- job: windows
  displayName: Windows
  pool:
    name: Azure Pipelines
    vmImage: windows-2022
  timeoutInMinutes: 10
  variables:
    BUILD_SCRIPT: $(System.DefaultWorkingDirectory)/scripts/build.ps1
    COMPILER_PLATFORM: vs2022
    PROJECT_OS: windows
    PREMAKE5: $(System.DefaultWorkingDirectory)/thirdparty/windows/premake-core/premake5.exe
    PREMAKE5_URL: https://github.com/premake/premake-core/releases/download/v5.0.0-beta1/premake-5.0.0-beta1-windows.zip
  steps:
  - checkout: self
    clean: true
    fetchDepth: 1
    submodules: recursive
  - powershell: '& "$env:BUILD_SCRIPT"'
    displayName: Build
  - task: CopyFiles@2
    displayName: 'Copy files to $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/projects/windows/vs2022'
      Contents: '*/Release/*.dll'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      CleanTargetFolder: true
      flattenFolders: true
      preserveTimestamp: true
  - task: PublishBuildArtifacts@1
    displayName: 'Publish build artifacts'
    inputs:
      ArtifactName: windows
- job: linux
  displayName: Linux
  pool:
    name: Azure Pipelines
    vmImage: ubuntu-latest
  timeoutInMinutes: 10
  variables:
    BUILD_SCRIPT: $(System.DefaultWorkingDirectory)/scripts/build.sh
    COMPILER_PLATFORM: gmake
    PROJECT_OS: linux
    PREMAKE5: $(System.DefaultWorkingDirectory)/thirdparty/linux/premake-core/premake5
    PREMAKE5_URL: https://github.com/premake/premake-core/releases/download/v5.0.0-beta1/premake-5.0.0-beta1-linux.tar.gz
    CC: gcc-10
    CXX: g++-10
    AR: gcc-ar-10
    NM: gcc-nm-10
    RANLIB: gcc-ranlib-10
  steps:
  - checkout: self
    clean: true
    fetchDepth: 1
    submodules: recursive
  - bash: '$BUILD_SCRIPT'
    displayName: Build
  - task: CopyFiles@2
    displayName: 'Copy files to $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/projects/linux/gmake'
      Contents: '*/Release/*.dll'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      CleanTargetFolder: true
      flattenFolders: true
      preserveTimestamp: true
  - task: PublishBuildArtifacts@1
    displayName: 'Publish build artifacts'
    inputs:
      ArtifactName: linux
- job: macosx
  displayName: macOS
  pool:
    name: Azure Pipelines
    vmImage: macOS-11
  timeoutInMinutes: 10
  variables:
    BUILD_SCRIPT: $(System.DefaultWorkingDirectory)/scripts/build.sh
    COMPILER_PLATFORM: gmake
    PROJECT_OS: macosx
    PREMAKE5: $(System.DefaultWorkingDirectory)/thirdparty/macosx/premake-core/premake5
    PREMAKE5_URL: https://github.com/premake/premake-core/releases/download/v5.0.0-beta1/premake-5.0.0-beta1-macosx.tar.gz
  steps:
  - checkout: self
    clean: true
    fetchDepth: 1
    submodules: recursive
  - bash: '$BUILD_SCRIPT'
    displayName: Build
  - task: CopyFiles@2
    displayName: 'Copy files to $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/projects/macosx/gmake'
      Contents: '*/Release/*.dll'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      CleanTargetFolder: true
      flattenFolders: true
      preserveTimestamp: true
  - task: PublishBuildArtifacts@1
    displayName: 'Publish build artifacts'
    inputs:
      ArtifactName: macosx
- job: publish
  displayName: Publish to GitHub Releases
  pool:
    name: Azure Pipelines
    vmImage: ubuntu-latest
  timeoutInMinutes: 5
  dependsOn:
    - windows
    - linux
    - macosx
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  steps:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download build artifacts'
    inputs:
      downloadType: specific
      parallelizationLimit: 12
  - task: GitHubRelease@1
    displayName: 'Publish GitHub release $(build.sourceBranchName)'
    inputs:
      gitHubConnection: 'GitHub danielga'
      releaseNotesSource: inline
      assets: '$(System.ArtifactsDirectory)/**'
      addChangeLog: false
